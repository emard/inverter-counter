(* Multispeed loop v01 *)
(* freq change order:
P.6 P.5 P.24 P.4 P.25 P.26 P.27 P.27 P.26 P.25 P.4 P.24 P.5 P.6 Hz
P.1150 *0.1s time to hold one freq
*)
(*
  ALLC    1        resets most parameters to factory default
  P.0    10.0   %  torque boost (required to start 100W vibro-motor)
  P.1    88.00  Hz max freq
  P.2    41.00  Hz min freq this is default running freq
  P.3    50.00  Hz Base freq
  P.4    27.50  Hz speed index=4 (RH) (max water-jump)
  P.5    12.50  Hz speed index=2 (RM) (max vertical amplitude)
  P.6     6.00  Hz speed index=1 (RL) (max side amplitude)
  P.7     0.2   s  Acceleration time (required to start)
  P.8     0.2   s  Deceleration time (adjust to park)
  P.9     3.80  A  rated motor current (required to start)
  P.13   19.00  Hz starting frequency (required to start)
  P.14    0        load pattern selection 0:V/f = const 1:V/f^2 = const
  P.15   50.00  Hz freq in "JOG" mode while holding "RUN" button
  P.22    150   %  stall prevention
  P.24   42.00  Hz speed index=3 (RL+RM) max audible vibrations
  P.25   50.00  Hz speed index=5 (RL+RH) nominal speed
  P.26   47.00  Hz speed index=6 (RM+RH) speed
  P.27   52.00  Hz speed index=7 (RL+RM+RH) speed
  P.29    1        s-pattern acceleration/decelration
  P.37   50.00     instead of Hz show rate @ 50 Hz see P.53=4 P.505=50 
  P.44   20.0   s  2nd acceleration (RH/RM remote control)
  P.45   20.0   s  2nd deceleration (RH/RM remote control)
  P.53    0        display 0:freq 4:rate by P.37
  P.59    0        0:multispeed RH/RM/RL, 1:RH/RM faster/slower remembers, 2:faster/slower forgets
  P.60    9        power saving, (required to start)
  P.72    0    kHz 0-default 0.7kHz, 15kHz fastest PWM, "silent" operation
  P.79    1        EXT start, LEDs PU=OFF EXT=ON
  P.82    0.00  A  motor excitation current
  P.127  50.00  Hz PID start with linear accelerate to this freq, then switch to PID control
  P.128   0        0:No PID (default), 1010:PID (optional)
  P.156   0        stall prevention P.22 bitmap 0-all enabled 31-all disabled
  P.183   50       MRS input = RUN PLC, LED P.RUN should turn ON now or after P.414
  P.192   9999     ABC relay no function (free for PLC)
  P.251   0        disable output phase loss detection (allow connecting 1-phase motor)
  P.261   1        on power failure, decelerate to stop
  P.277   0        torque limit (current limit) 0-disabled 1-enabled (required to start?)
  P.414   1        PLC enable (doesn't reset by ALLC, LED P.RUN should turn ON, not blink)
  P.498  9696      PLC program erase when P.414=0
  P.505  50.00  Hz reference for rate display see P.37 P.53
  P.571   9999     s  Holding time at start
  P.609   5        PLC is source of deviation value, write -10000..+10000 to SD1248
  P.610   5        PLC is source of measured value (not used)
  P.675   1        PLC auto-save P.1195-P.1199 PLC D251-D255 at power off
  P.775   42       LED 2nd menu displays countdown value at SD1217 (instead of motor current A)
* P.775   2        LED 2nd menu shows motor current A
  P.776   41       LED 3rd menu displays run time value at SD1218
* P.776   2        LED 3rd menu shows motor current A
  P.801   9999     output limit level (9999-from P.22) others override P.22?
  P.803   1        0-torq constant, 1-torq rising (required to start)
  P.810   0        0-torq limit by parameters, ignore external
  P.816   9999     torq limit acceleration
  P.817   9999     torq limit deceleration
  P.874   400 %    overload shutdown torq OLT limit maximum
  P.888   0       parameters version
  P.889   0       program version
  P.992   40       when dial pushed LED displays cycle time or too fast/slow counts
  P.1150  10       D206 *0.1s duration OFF
  P.1151  10       D207 *0.1s duration ON
*)
(* Global Label *)
(*
VAR_GLOBAL_CONSTANT	PLC_TAKES_START_STOP_CTRL	Word[Signed]	H0FFF				
VAR_GLOBAL	SPEED_INDEX	Word[Signed]		D10	%MW0.10	Counts 12345677654321 to select speed	
VAR_GLOBAL	INC_SPEED_INDEX	Bit		M9	%MX0.9	Index counting direction 0:dec, 1:inc	
VAR_GLOBAL	HOLD_SPEED	Word[Signed]		D206	%MW0.206	*0.1s holding sipeed	P.1150
VAR_GLOBAL	PLC_MOTOR_SOFT_REG_CTRL	Word[Signed]		SD1148	%MW10.1148	PLC soft reg control	
VAR_GLOBAL	PLC_MOTOR_RUN_CTRL	Word[Signed]		SD1149	%MW10.1149	PLC takes motor control	
VAR_GLOBAL	POWER_ON_PULSE	Bit		SM402	%MX10.402	short pulse at power on	
VAR_GLOBAL	MOTOR_RUN_STF	Bit		SM1200	%MX10.1200	write TRUE to run motor forward	
VAR_GLOBAL	MOTOR_RUN_STR	Bit		SM1201	%MX10.1201	write TRUE to run motor reverse	
VAR_GLOBAL	MOTOR_SPEED_RH	Bit		SM1202	%MX10.1202	write TRUE to run motor at speed 3 "high"	P.4
VAR_GLOBAL	MOTOR_SPEED_RM	Bit		SM1203	%MX10.1203	write TRUE to run motor at speed 2 "middle"	P.5
VAR_GLOBAL	MOTOR_SPEED_RL	Bit		SM1204	%MX10.1204	write TRUE to run motor at speed 1 "low"	P.6
VAR_GLOBAL	PLC_MOTOR_USE_SOFT_REG_CTRL	Bit		SM1255	%MX10.1255	SM1255=FALSE to run motor with SM1200 and ignore SD1148	
VAR_GLOBAL	NEXT_SPEED	Bit		TS0	%MX3.0	Timer for next speed change	
VAR_GLOBAL	POWER_ON_DELAYED	Bit		TS2	%MX3.2	Motor should be enabled 0.2s later	
VAR_GLOBAL	SPEED_SWITCH	Bit		X3	%IX3	Switch on RM input	
VAR_GLOBAL	ABC_RELAY	Bit		Y5	%QX5	ABC relay	P.192=9999
VAR_GLOBAL	SPEED_INDEX_AND1	Bit		M11	%MX0.11	debug	
*)
IF POWER_ON_PULSE THEN
	PLC_MOTOR_RUN_CTRL:=PLC_TAKES_START_STOP_CTRL;
	PLC_MOTOR_SOFT_REG_CTRL:=0;
	PLC_MOTOR_USE_SOFT_REG_CTRL:=FALSE;
END_IF;
OUT_T(TRUE, POWER_ON_DELAYED, 2); (* becomes true 0.2 s after power on, required for start after power on *)
(* timer output is a pulse *)
OUT_T( NOT(NEXT_SPEED) (* input *), NEXT_SPEED (* timer module *), HOLD_SPEED (* time P.1150 *) );
(* ABC_RELAY:=INC_SPEED_INDEX; *) (* output Y5 turns on ABC relay when P.192=9999 *)
IF NEXT_SPEED THEN (* pulse *)
    IF INC_SPEED_INDEX THEN
        IF SPEED_INDEX<7 THEN
            SPEED_INDEX:=SPEED_INDEX+1;
        ELSE
            INC_SPEED_INDEX:=FALSE;
        END_IF;
    ELSE
        IF SPEED_INDEX>1 THEN
            SPEED_INDEX:=SPEED_INDEX-1;
        ELSE
            INC_SPEED_INDEX:=TRUE;
        END_IF;
    END_IF;
    MOTOR_RUN_STF:=POWER_ON_DELAYED AND INC_SPEED_INDEX;
    MOTOR_RUN_STR:=POWER_ON_DELAYED AND NOT(INC_SPEED_INDEX);
    MOTOR_SPEED_RL:=SPEED_INDEX MOD 2>0; (* &1 *)
    MOTOR_SPEED_RM:=SPEED_INDEX/2 MOD 2>0; (* &2 *)
    MOTOR_SPEED_RH:=SPEED_INDEX/4 MOD 2>0; (* &4 *)
END_IF;
